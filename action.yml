name: 'Atlas CLI GitHub Action (unofficial)'
description: 'Use AtlasCLI in your GitHub workflow'
inputs:
  version:
    description: 'AtlasCLI version to use in your workflow.'
    required: false
    default: 'v1.5.1'
  public-key:
    description: 'MongoDB Atlas PublicKey.'
    required: true
  private-key:
    description: 'MongoDB Atlas PrivateKey.'
    required: true
  org-id:
    description: 'MongoDB Atlas Organization ID that will be used by Atlas CLI as default when running commands in the workflow.'
    required: false
  project-id:
    description: 'MongoDB Atlas Project ID that will be used by Atlas CLI as default when running commands in the workflow.'
    required: false
  create-project-name:
    description: 'MongoDB Atlas Project name of the project that will created by Atlas CLI.'
    required: false
  delete-project-id:
    description: 'MongoDB Atlas Project Id of the project that will deleted by Atlas CLI.'
    required: false
  quickstart:
    description: 'Quickstart creates a new Atlas Project, a Free M0 Cluster, a DB user and 0.0.0.0/0 to the Access List so that you have all you need for your workflow.'
    required: false
outputs:
  create-project-id:
    description: "ProjectId of the create Atlas Project"
    value: ${{ steps.create_project.outputs.create-project-id }}
  quickstart-cluster-name:
      description: "Name of the Atlas Cluster generated by Quickstart."
      value: ${{ steps.quickstart.outputs.quickstart-cluster-name }}
  quickstart-db-username:
      description: "DB User to use to access your Atlas Cluster."
      value: ${{ steps.quickstart.outputs.quickstart-db-username }}
  quickstart-db-username-password:
      description: "DB User Password to use to access your Atlas Cluster."
      value: ${{ steps.quickstart.outputs.quickstart-db-username-password }}
  quickstart-connection-string:
      description: "Connection String to use to connect to your Atlas Cluster."
      value: ${{ steps.quickstart.outputs.quickstart-connection-string }}
runs:
  using: "composite"
  steps:

    - name: Check Atlas CLI is in the $PATH
      id: check_path
      shell: bash
      run: |
        if ! which atlas >/dev/null 2>&1; then
          # execute the following step only if the binary is not in PATH
          echo "atlas-installed=0" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "atlas-installed=1" >> $GITHUB_OUTPUT

    - name: Install Go
      if:  steps.check_path.outputs.atlas-installed == 0
      uses: actions/setup-go@v3
      with:
       go-version: 1.19

    - name: Checkout repository
      if:  steps.check_path.outputs.atlas-installed == 0
      uses: actions/checkout@v3
      with: 
        repository: mongodb/mongodb-atlas-cli
        ref: atlascli/${{ inputs.version }}

    - name: Build AtlasCLI
      if:  steps.check_path.outputs.atlas-installed == 0
      shell: bash
      run: make build-atlascli

    - name: Add Atlas CLI to $PATH
      if:  steps.check_path.outputs.atlas-installed == 0
      shell: bash
      run: |
        chmod +x bin/atlas
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH       

    - name: Configure AtlasCLI
      shell: bash
      run: |
        if [ -n "${{ inputs.org-id }}" ]; then
         atlas config set org_id ${{ inputs.org-id }}
        fi
        
        if [ -n "${{ inputs.project-id }}" ]; then
         atlas config set project_id ${{ inputs.project-id }}
        fi

        atlas config set public_api_key ${{ inputs.public-key }}
        atlas config set private_api_key ${{ inputs.private-key }}
        atlas config set service "cloud"

    - name: Create Project
      if: ${{ inputs.create-project-name }}
      shell: bash
      id: create_project
      run: |        
        projectId=$(atlas project create "${{ inputs.create-project-name }}" -o json-path="$.id")
        echo "create-project-id=$(echo $projectId)" >> $GITHUB_OUTPUT

    - name: Delete Project
      if: ${{ inputs.delete-project-id }}
      shell: bash
      run: atlas project delete ${{ inputs.delete-project-id }} --force

    - name: Quickstart
      if: ${{ inputs.quickstart &&  inputs.org-id }}
      shell: bash
      id: quickstart
      run: |
        projectId=$(atlas project create "${{ github.run_id }}" -o json-path="$.id")
        echo "create-project-id=$(echo $projectId)" >> $GITHUB_OUTPUT
        
        atlas cluster create "${{ github.run_id }}" --tier M0 --provider AWS --region US_EAST_1 --projectId $projectId 
        atlas cluster watch "${{ github.run_id }}" --projectId $projectId
        
        connectionString=$(atlas cluster connectionstrings describe "${{ github.run_id }}" --projectId $projectId -o json-path="$.standardSrv")
        
        atlas dbuser create --username "${{ github.run_id }}" --password "${{ github.run_id }}" --role atlasAdmin@admin --projectId $projectId
        
        atlas accesslist create 0.0.0.0/0 --comment "GitHubAction" --projectId $projectId 
        
        echo "quickstart-cluster-name=$(echo "${{ github.run_id }}")" >> $GITHUB_OUTPUT
        echo "quickstart-db-username=$(echo "${{ github.run_id }}")" >> $GITHUB_OUTPUT
        echo "quickstart-db-username-password=$(echo "${{ github.run_id }}")" >> $GITHUB_OUTPUT
        echo "quickstart-connection-string=$(echo $connectionString)" >> $GITHUB_OUTPUT
        
        
