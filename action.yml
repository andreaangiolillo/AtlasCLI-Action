name: 'Atlas CLI GitHub Action (unofficial)'
description: 'Use AtlasCLI in your GitHub workflow'
inputs:
  version:
    description: 'AtlasCLI version to use in your workflow.'
    required: false
    default: 'v1.5.1'
  public-key:
    description: 'MongoDB Atlas PublicKey.'
    required: true
  private-key:
    description: 'MongoDB Atlas PrivateKey.'
    required: true
  org-id:
    description: 'MongoDB Atlas Organization ID that will be used by Atlas CLI as default when running commands in the workflow.'
    required: false
  project-id:
    description: 'MongoDB Atlas Project ID that will be used by Atlas CLI as default when running commands in the workflow.'
    required: false
  create-project-name:
    description: 'MongoDB Atlas Project name os the project that will created by Atlas CLI.'
    required: false
outputs:
  create-project-id:
    description: "ProjectId of the create Atlas Project"
    value: ${{ steps.create_project.outputs.create-project-id }}
runs:
  using: "composite"
  steps:
    - name: Install Go
      uses: actions/setup-go@v3
      with:
       go-version: 1.19

    - name: Checkout repository
      if:  ${{ ! atlas --version }}
      uses: actions/checkout@v3
      with: 
        repository: mongodb/mongodb-atlas-cli
        ref: atlascli/${{ inputs.version }}

    - name: Build AtlasCLI
      shell: bash
      run: make build-atlascli

    - name: Add Atlas CLI to $PATH
      shell: bash
      run: |
        chmod +x bin/atlas
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH       

    - name: Configure AtlasCLI
      shell: bash
      run: |
        if [ -n "${{ inputs.org-id }}" ]; then
         atlas config set org_id ${{ inputs.org-id }}
        fi
        
        if [ -n "${{ inputs.project-id }}" ]; then
         atlas config set project_id ${{ inputs.project-id }}
        fi

        atlas config set public_api_key ${{ inputs.public-key }}
        atlas config set private_api_key ${{ inputs.private-key }}
        atlas config set service "cloud"

    - name: Create Project
      shell: bash
      id: create_project
      run: |
        if [ -z "${{ inputs.create-project-name }}" ]; then
         exit 0
        fi
        
        projectId=$(atlas project create "${{ inputs.create-project-name }}" -o json-path="$.id")
        echo "create-project-id=$(echo $projectId)" >> $GITHUB_OUTPUT